package net.milkbowl.vault.chat.plugins;

import com.overmc.overpermissions.Group;
import com.overmc.overpermissions.GroupManager;
import com.overmc.overpermissions.OverPermissions;
import com.overmc.overpermissions.OverPermissionsAPI;
import com.overmc.overpermissions.PlayerPermissionData;
import com.overmc.overpermissions.SQLManager;
import java.util.logging.Logger;
import net.milkbowl.vault.chat.Chat;
import net.milkbowl.vault.permission.Permission;
import org.bukkit.Bukkit;
import org.bukkit.Server;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.server.PluginDisableEvent;
import org.bukkit.event.server.PluginEnableEvent;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.PluginDescriptionFile;
import org.bukkit.plugin.PluginManager;

public class Chat_OverPermissions
  extends Chat
{
  private static final String name = "OverPermissions_Chat";
  private Plugin plugin;
  private OverPermissions overPerms;
  private OverPermissionsAPI api;
  
  public Chat_OverPermissions(Plugin plugin, Permission perms)
  {
    super(perms);
    this.plugin = plugin;
    
    plugin.getServer().getPluginManager().registerEvents(new PermissionServerListener(this), plugin);
    if (this.overPerms == null)
    {
      Plugin p = plugin.getServer().getPluginManager().getPlugin("OverPermissions");
      if (p != null)
      {
        this.overPerms = ((OverPermissions)p);
        plugin.getLogger().info(String.format("[%s][Chat] %s hooked.", new Object[] { plugin.getDescription().getName(), "OverPermissions" }));
      }
    }
    if ((this.api == null) && (this.overPerms != null)) {
      this.api = this.overPerms.getAPI();
    }
  }
  
  public String getName()
  {
    return "OverPermissions_Chat";
  }
  
  public boolean isEnabled()
  {
    return this.overPerms != null;
  }
  
  public String getPlayerPrefix(String world, String player)
  {
    return getPlayerInfoString(world, player, "prefix", "");
  }
  
  public void setPlayerPrefix(String world, String player, String prefix)
  {
    setPlayerInfoString(world, player, "prefix", prefix);
  }
  
  public String getPlayerSuffix(String world, String player)
  {
    return getPlayerInfoString(world, player, "suffix", "");
  }
  
  public void setPlayerSuffix(String world, String player, String suffix)
  {
    setPlayerInfoString(world, player, "suffix", suffix);
  }
  
  public String getGroupPrefix(String world, String group)
  {
    return getGroupInfoString(world, group, "prefix", "");
  }
  
  public void setGroupPrefix(String world, String group, String prefix)
  {
    setGroupInfoString(world, group, "prefix", prefix);
  }
  
  public String getGroupSuffix(String world, String group)
  {
    return getGroupInfoString(world, group, "suffix", "");
  }
  
  public void setGroupSuffix(String world, String group, String suffix)
  {
    setGroupInfoString(world, group, "prefix", suffix);
  }
  
  public int getPlayerInfoInteger(String world, String player, String node, int defaultValue)
  {
    String s = getPlayerInfoString(world, player, node, null);
    if (s == null) {
      return defaultValue;
    }
    try
    {
      return Integer.valueOf(s).intValue();
    }
    catch (NumberFormatException e) {}
    return defaultValue;
  }
  
  public void setPlayerInfoInteger(String world, String player, String node, int value)
  {
    setPlayerInfoString(world, player, node, String.valueOf(value));
  }
  
  public int getGroupInfoInteger(String world, String group, String node, int defaultValue)
  {
    String s = getGroupInfoString(world, group, node, null);
    if (s == null) {
      return defaultValue;
    }
    try
    {
      return Integer.valueOf(s).intValue();
    }
    catch (NumberFormatException e) {}
    return defaultValue;
  }
  
  public void setGroupInfoInteger(String world, String group, String node, int value)
  {
    setGroupInfoString(world, group, node, String.valueOf(value));
  }
  
  public double getPlayerInfoDouble(String world, String player, String node, double defaultValue)
  {
    String s = getPlayerInfoString(world, player, node, null);
    if (s == null) {
      return defaultValue;
    }
    try
    {
      return Double.valueOf(s).doubleValue();
    }
    catch (NumberFormatException e) {}
    return defaultValue;
  }
  
  public void setPlayerInfoDouble(String world, String player, String node, double value)
  {
    setPlayerInfoString(world, player, node, String.valueOf(value));
  }
  
  public double getGroupInfoDouble(String world, String group, String node, double defaultValue)
  {
    String s = getGroupInfoString(world, group, node, null);
    if (s == null) {
      return defaultValue;
    }
    try
    {
      return Double.valueOf(s).doubleValue();
    }
    catch (NumberFormatException e) {}
    return defaultValue;
  }
  
  public void setGroupInfoDouble(String world, String group, String node, double value)
  {
    setGroupInfoString(world, group, node, String.valueOf(value));
  }
  
  public boolean getPlayerInfoBoolean(String world, String player, String node, boolean defaultValue)
  {
    String s = getPlayerInfoString(world, player, node, null);
    if (s == null) {
      return defaultValue;
    }
    Boolean val = Boolean.valueOf(s);
    return val != null ? val.booleanValue() : defaultValue;
  }
  
  public void setPlayerInfoBoolean(String world, String player, String node, boolean value)
  {
    setPlayerInfoString(world, player, node, String.valueOf(value));
  }
  
  public boolean getGroupInfoBoolean(String world, String group, String node, boolean defaultValue)
  {
    String s = getGroupInfoString(world, group, node, null);
    if (s == null) {
      return defaultValue;
    }
    return Boolean.valueOf(s).booleanValue();
  }
  
  public void setGroupInfoBoolean(String world, String group, String node, boolean value)
  {
    setGroupInfoString(world, group, node, String.valueOf(value));
  }
  
  public String getPlayerInfoString(String world, String playerName, String node, String defaultValue)
  {
    Player p = Bukkit.getPlayerExact(playerName);
    String ret = null;
    if (p != null)
    {
      ret = this.overPerms.getPlayerPermissions(p).getStringMeta(node, defaultValue);
    }
    else
    {
      int playerId = this.overPerms.getSQLManager().getPlayerId(playerName);
      int worldId = this.overPerms.getSQLManager().getWorldId(world);
      ret = this.overPerms.getSQLManager().getPlayerMetaValue(playerId, worldId, node);
    }
    if (ret == null) {
      return defaultValue;
    }
    return ret;
  }
  
  public void setPlayerInfoString(String world, String player, String node, String value)
  {
    Player p = Bukkit.getPlayerExact(player);
    int playerId = this.overPerms.getSQLManager().getPlayerId(player, true);
    int worldId = this.overPerms.getSQLManager().getWorldId(player, false);
    if (worldId < 0) {
      this.overPerms.getSQLManager().setGlobalPlayerMeta(playerId, node, value);
    } else {
      this.overPerms.getSQLManager().setPlayerMeta(playerId, worldId, node, value);
    }
    if (p != null) {
      this.overPerms.getPlayerPermissions(p).recalculateMeta();
    }
  }
  
  public String getGroupInfoString(String world, String groupName, String node, String defaultValue)
  {
    Group group = this.overPerms.getGroupManager().getGroup(groupName);
    if (group == null) {
      return defaultValue;
    }
    String value = group.getMeta(node);
    if (value == null) {
      return defaultValue;
    }
    return value;
  }
  
  public void setGroupInfoString(String world, String groupName, String node, String value)
  {
    Group group = this.overPerms.getGroupManager().getGroup(groupName);
    if (group == null) {
      return;
    }
    group.setMeta(node, value);
    group.recalculatePermissions();
  }
  
  public class PermissionServerListener
    implements Listener
  {
    Chat_OverPermissions chat = null;
    
    public PermissionServerListener(Chat_OverPermissions chat)
    {
      this.chat = chat;
    }
    
    @EventHandler(priority=EventPriority.MONITOR)
    public void onPluginEnable(PluginEnableEvent event)
    {
      if (this.chat.overPerms == null)
      {
        Plugin chat = Chat_OverPermissions.this.plugin.getServer().getPluginManager().getPlugin("OverPermissions");
        if (chat != null)
        {
          this.chat.overPerms = ((OverPermissions)chat);
          Chat_OverPermissions.this.plugin.getLogger().info(String.format("[%s][Chat] %s hooked.", new Object[] { Chat_OverPermissions.this.plugin.getDescription().getName(), Chat_OverPermissions.this.getName() }));
        }
      }
    }
    
    @EventHandler(priority=EventPriority.MONITOR)
    public void onPluginDisable(PluginDisableEvent event)
    {
      if ((this.chat.overPerms != null) && 
        (event.getPlugin().getDescription().getName().equals("OverPermissions")))
      {
        this.chat.overPerms = null;
        Chat_OverPermissions.this.plugin.getLogger().info(String.format("[%s][Chat] %s un-hooked.", new Object[] { Chat_OverPermissions.this.plugin.getDescription().getName(), Chat_OverPermissions.this.getName() }));
      }
    }
  }
}
